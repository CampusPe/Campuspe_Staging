name: Deploy API to Azure Web App

on:
  push:
    branches: [ main ]
    paths: [ 'apps/api/**' ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/api/package-lock.json

      - name: Install dependencies
        run: |
          cd apps/api
          npm ci --include=dev

      - name: Build application
        run: |
          cd apps/api
          npm run build

      - name: Create deployment package
        run: |
          cd apps/api
          
          # Create deployment directory
          mkdir -p deploy
          
          # Copy source code and necessary files (Azure will build it)
          cp -r src deploy/
          cp package.json deploy/
          cp package-lock.json deploy/
          cp tsconfig.json deploy/
          
          # Create a simple package.json that Azure can build
          cat > deploy/package.json << 'EOF'
{
  "name": "campuspe-api",
  "version": "1.0.0",
  "description": "CampusPe API Server",
  "main": "dist/app.js",
  "scripts": {
    "start": "node dist/app.js",
    "build": "tsc",
    "postinstall": "npm run build"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "aws-sdk": "^2.1691.0",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "express": "^4.19.2",
    "express-rate-limit": "^7.4.0",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.5.4",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.9.14",
    "pdf-parse": "^1.1.1",
    "stripe": "^16.8.0"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/multer": "^1.4.11",
    "@types/node": "^22.5.0",
    "@types/nodemailer": "^6.4.15",
    "@types/pdf-parse": "^1.1.4",
    "typescript": "^5.5.4"
  }
}
EOF
          
          # Create startup script for Azure
          cat > deploy/startup.sh << 'EOF'
#!/bin/bash
echo "ğŸš€ Starting CampusPe API Server..."
cd /home/site/wwwroot
export NODE_ENV=production
export PORT=${PORT:-8000}
echo "ğŸ“¦ Node.js version: $(node --version)"
echo "ğŸš€ Starting server on port $PORT"
node dist/app.js
EOF
          chmod +x deploy/startup.sh

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'campuspe-api-staging-hmfjgud5c6a7exe9'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_API_PUBLISH_PROFILE }}
          package: apps/api/deploy
