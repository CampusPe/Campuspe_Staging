# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - campuspe-web-staging

on:
  push:
    branches:
      - main
    paths:
      - "apps/web/**"
      - ".github/workflows/main_campuspe-web-staging.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install root dependencies
        run: npm ci

      - name: Install Web dependencies
        working-directory: ./apps/web
        run: npm ci

      - name: Build Web application
        working-directory: ./apps/web
        run: |
          echo "Building Next.js application..."
          npm run build
          echo "Build completed. Checking .next directory..."
          ls -la .next/

      - name: Create deployment package with correct structure
        run: |
          echo "Creating deployment package with Next.js app structure..."
          
          # Create deployment package at root level with proper Next.js structure
          mkdir -p deployment-package
          
          # Copy ALL Next.js source files and directories to deployment root
          echo "Copying Next.js application files..."
          cp -r apps/web/pages deployment-package/
          cp -r apps/web/components deployment-package/ 2>/dev/null || echo "No components directory"
          cp -r apps/web/styles deployment-package/ 2>/dev/null || echo "No styles directory"
          cp -r apps/web/utils deployment-package/ 2>/dev/null || echo "No utils directory"
          cp -r apps/web/public deployment-package/
          cp -r apps/web/.next deployment-package/
          
          # Copy configuration files to root
          cp apps/web/package*.json deployment-package/
          cp apps/web/next.config.js deployment-package/ 2>/dev/null || echo "No next.config.js found"
          cp apps/web/tsconfig.json deployment-package/ 2>/dev/null || echo "No tsconfig.json found"
          cp apps/web/postcss.config.js deployment-package/ 2>/dev/null || echo "No postcss.config.js found"
          cp apps/web/tailwind.config.js deployment-package/ 2>/dev/null || echo "No tailwind.config.js found"
          
          # Copy server files (prefer enhanced startup for better diagnostics)
          if [ -f "apps/web/startup-enhanced.js" ]; then
            cp apps/web/startup-enhanced.js deployment-package/startup.js
            echo "Using startup-enhanced.js as startup.js for better diagnostics"
          elif [ -f "apps/web/startup.js" ]; then
            cp apps/web/startup.js deployment-package/
            echo "Using original startup.js"
          fi
          
          # Copy server files
          if [ -f "apps/web/server-azure-debug.js" ]; then
            cp apps/web/server-azure-debug.js deployment-package/
          fi
          if [ -f "apps/web/server-azure.js" ]; then
            cp apps/web/server-azure.js deployment-package/
          fi
          if [ -f "apps/web/server.js" ]; then
            cp apps/web/server.js deployment-package/
          fi
          
          # Copy Azure-specific files
          cp apps/web/startup.sh deployment-package/ 2>/dev/null || echo "No startup.sh found"
          cp apps/web/web.config deployment-package/ 2>/dev/null || echo "No web.config found"

          # Install production dependencies in deployment package
          echo "Installing production dependencies in deployment package..."
          cd deployment-package
          npm ci --production --silent
          cd ..

          echo "Final deployment package structure:"
          ls -la deployment-package/
          echo ""
          echo "Checking for required Next.js directories:"
          echo "pages directory: $(ls -d deployment-package/pages 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"
          echo ".next directory: $(ls -d deployment-package/.next 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"
          echo "public directory: $(ls -d deployment-package/public 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"
          echo "startup.js: $(ls deployment-package/startup.js 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment-package/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Verify deployment package structure
        run: |
          echo "Verifying deployment package structure..."
          ls -la
          echo ""
          echo "Required directories check:"
          echo "pages: $(ls -d pages 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"
          echo ".next: $(ls -d .next 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"
          echo "node_modules: $(ls -d node_modules 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"
          echo "startup.js: $(ls startup.js 2>/dev/null && echo 'EXISTS' || echo 'MISSING')"

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "campuspe-web-staging"
          slot-name: "Production"
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_WEB_STAGING }}

      - name: Verify deployment
        run: |
          echo "Deployment completed!"
          echo ""
          echo "üîç To diagnose startup issues, check Azure Portal logs:"
          echo "   Azure Portal ‚Üí campuspe-web-staging ‚Üí Monitoring ‚Üí Log stream"
          echo ""
          echo "üåê Test URL: https://campuspe-web-staging-erd8dvb3ewcjc5g2.southindia-01.azurewebsites.net"
          echo ""
          echo "üö® CRITICAL: Ensure environment variables are set in Azure Portal:"
          echo "   PORT = 8080"
          echo "   NODE_ENV = production"
          echo "   NEXT_PUBLIC_API_URL = https://campuspe-api-staging-hmfjgud5c6a7exe9.southindia-01.azurewebsites.net"
          echo "   WEBSITES_ENABLE_APP_SERVICE_STORAGE = false"
          echo "   WEBSITE_RUN_FROM_PACKAGE = 1"
          echo "   NEXT_TELEMETRY_DISABLED = 1"
