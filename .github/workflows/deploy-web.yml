name: Deploy Web to Azure Web App

on:
  push:
    branches: [ main ]
    paths: [ 'apps/web/**' ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci --include=dev

      - name: Build application
        run: |
          cd apps/web
          npm run build

      - name: Create deployment package
        run: |
          cd apps/web
          
          # Create deployment directory
          mkdir -p deploy
          
          # Copy Next.js build output
          cp -r .next deploy/
          cp -r public deploy/ || mkdir -p deploy/public
          
          # Copy package files
          cp package.json deploy/
          cp package-lock.json deploy/
          cp next.config.js deploy/ || echo "module.exports = {}" > deploy/next.config.js
          
          # Install ONLY production dependencies in deploy folder
          cd deploy
          npm ci --production --ignore-scripts
          cd ..
          
          # Create server.js for standalone deployment
          cat > deploy/server.js << 'EOF'
const { createServer } = require('http')
const { parse } = require('url')
const next = require('next')

const dev = false
const hostname = process.env.WEBSITE_HOSTNAME || '0.0.0.0'
const port = process.env.PORT || 3000

console.log('🚀 Starting CampusPe Web App...')
console.log('📦 Node.js version:', process.version)
console.log('🌐 Environment:', process.env.NODE_ENV)
console.log('🔧 Port:', port)
console.log('🏠 Hostname:', hostname)

const app = next({ 
  dev: false,
  hostname, 
  port,
  dir: __dirname
})

const handle = app.getRequestHandler()

app.prepare().then(() => {
  console.log('✅ Next.js app prepared successfully')
  createServer(async (req, res) => {
    try {
      const parsedUrl = parse(req.url, true)
      await handle(req, res, parsedUrl)
    } catch (err) {
      console.error('❌ Error handling request:', req.url, err)
      res.statusCode = 500
      res.end('Internal server error')
    }
  }).listen(port, hostname, (err) => {
    if (err) {
      console.error('❌ Server startup error:', err)
      process.exit(1)
    }
    console.log(`🎉 Server ready on http://${hostname}:${port}`)
  })
}).catch((err) => {
  console.error('❌ Error preparing Next.js app:', err)
  process.exit(1)
})
EOF
          
          # Create startup script
          cat > deploy/startup.sh << 'EOF'
#!/bin/bash
echo "🚀 Starting CampusPe Web Application..."
cd /home/site/wwwroot
export NODE_ENV=production
export PORT=${PORT:-3000}
echo "📦 Node.js version: $(node --version)"
echo "🚀 Starting server on port $PORT"
node server.js
EOF
          chmod +x deploy/startup.sh

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'campuspe-web-staging-erd8dvb3ewcjc5g2'
          publish-profile: ${{ secrets.AZURE_WEB_PUBLISH_PROFILE }}
          package: apps/web/deploy
