"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const colleges_1 = require("../controllers/colleges");
const students_1 = require("../controllers/students");
const auth_1 = __importDefault(require("../middleware/auth"));
const router = express_1.default.Router();
router.get('/profile', auth_1.default, colleges_1.getCollegeProfile);
router.put('/profile', auth_1.default, colleges_1.updateCollegeProfile);
router.get('/stats', auth_1.default, colleges_1.getCollegeStats);
router.get('/students', auth_1.default, colleges_1.getCollegeStudents);
router.get('/jobs', auth_1.default, colleges_1.getCollegeJobs);
router.get('/placements', auth_1.default, colleges_1.getCollegePlacements);
router.get('/events', auth_1.default, colleges_1.getCollegeEvents);
const invitations_1 = require("../controllers/invitations");
router.get('/invitations', auth_1.default, invitations_1.getCollegeInvitations);
router.post('/invitations/:invitationId/accept', auth_1.default, invitations_1.acceptInvitation);
router.post('/invitations/:invitationId/decline', auth_1.default, invitations_1.declineInvitation);
router.post('/invitations/:invitationId/counter', auth_1.default, invitations_1.proposeCounterDates);
router.get('/search', colleges_1.searchColleges);
router.get('/public', colleges_1.getColleges);
router.get('/:id/stats', colleges_1.getCollegeStats);
router.get('/', colleges_1.getColleges);
router.get('/user/:userId', colleges_1.getCollegeByUserId);
router.get('/:id/profile', colleges_1.getCollegeById);
router.get('/:id', colleges_1.getCollegeById);
router.get('/:collegeId/connections', colleges_1.getCollegeConnections);
router.post('/', colleges_1.createCollege);
router.patch('/:collegeId/recruiters/:recruiterId', colleges_1.manageRecruiterApproval);
router.put('/user/:userId', colleges_1.updateCollegeByUserId);
router.put('/:id', colleges_1.updateCollege);
router.post('/resubmit', auth_1.default, colleges_1.resubmitCollege);
router.delete('/:id', colleges_1.deleteCollege);
router.get('/', students_1.getStudentsByCollege);
exports.default = router;
