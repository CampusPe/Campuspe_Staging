"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const admin_1 = require("../controllers/admin");
const auth_1 = __importDefault(require("../middleware/auth"));
const adminAuth_1 = require("../middleware/adminAuth");
const router = express_1.default.Router();
router.use(auth_1.default);
router.use(adminAuth_1.adminMiddleware);
router.get('/dashboard/stats', (0, adminAuth_1.checkPermission)('view_analytics'), admin_1.getDashboardStats);
router.get('/pending-approvals', admin_1.getPendingApprovals);
router.get('/colleges', admin_1.getAllColleges);
router.get('/recruiters', admin_1.getAllRecruiters);
router.get('/colleges/:collegeId', admin_1.getCollegeDetails);
router.post('/colleges/:collegeId/approve', (0, adminAuth_1.checkPermission)('approve_colleges'), admin_1.approveCollege);
router.post('/colleges/:collegeId/reject', (0, adminAuth_1.checkPermission)('approve_colleges'), admin_1.rejectCollege);
router.post('/colleges/:collegeId/deactivate', (0, adminAuth_1.checkPermission)('manage_users'), admin_1.deactivateCollege);
router.post('/colleges/:collegeId/activate', (0, adminAuth_1.checkPermission)('manage_users'), admin_1.activateCollege);
router.post('/colleges/:collegeId/suspend', (0, adminAuth_1.checkPermission)('manage_users'), admin_1.suspendCollege);
router.get('/recruiters/:recruiterId', admin_1.getRecruiterDetails);
router.post('/recruiters/:recruiterId/approve', (0, adminAuth_1.checkPermission)('approve_recruiters'), admin_1.approveRecruiter);
router.post('/recruiters/:recruiterId/reject', (0, adminAuth_1.checkPermission)('approve_recruiters'), admin_1.rejectRecruiter);
router.post('/recruiters/:recruiterId/deactivate', (0, adminAuth_1.checkPermission)('manage_users'), admin_1.deactivateRecruiter);
router.post('/recruiters/:recruiterId/activate', (0, adminAuth_1.checkPermission)('manage_users'), admin_1.activateRecruiter);
router.post('/recruiters/:recruiterId/suspend', (0, adminAuth_1.checkPermission)('manage_users'), admin_1.suspendRecruiter);
router.get('/profile/:userId', admin_1.getAdminProfile);
router.post('/documents/:entityType/:entityId', admin_1.handleDocumentUpload);
exports.default = router;
